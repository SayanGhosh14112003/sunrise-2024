"use client";
import Head from "next/head";
import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import CardFile from "./card";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [todo, setTodo] = useState([]);
  const [ongoing, setOngoing] = useState([]);
  const [completed, setCompleted] = useState([]);
  const handleClick = async (title: string) => {
    const res = await fetch("http://localhost:3000/api/markComplete", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ title }),
    });
    const data = await res.json();
    setTodo(data?.todo);
    setOngoing(data?.ongoing);
    setCompleted(data?.completed);
  };
  useEffect(() => {
    (async () => {
      const res = await fetch("http://localhost:3000/api/hello");
      const data = await res.json();
      setTodo(data?.todo);
      setOngoing(data?.ongoing);
      setCompleted(data?.completed);
    })();
  }, []);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={` ${inter.className}`}>
        <h1
          style={{
            margin: "15px",
            fontSize: "2.5rem",
            fontWeight: "bold",
            color: "#1677ff",
            textAlign: "center",
            textShadow: "2px 2px 4px rgba(0, 0, 0, 0.1)",
          }}>
          Task Board
        </h1>
        <div
          style={{
            display: "flex",
            flexWrap: "wrap",
            justifyContent: "space-around",
            margin: 0,
          }}>
          <div
            style={{
              width: "30vw",
              minHeight: "90vh",
              border: "2px solid grey",
            }}>
            <h1 style={{ textAlign: "center" }}>todo</h1>
            {todo.map(({ id, title, description }) => {
              return (
                <CardFile
                  key={id}
                  id={id}
                  title={title}
                  description={description}
                  handleClick={handleClick}
                  isDisable={true}
                  completed={false}
                />
              );
            })}
          </div>
          <div
            style={{
              width: "30vw",
              minHeight: "90vh",
              border: "2px solid grey",
            }}>
            <h1 style={{ textAlign: "center" }}>ongoing</h1>
            {ongoing.map(({ id, title, description }) => {
              return (
                <CardFile
                  key={id}
                  id={id}
                  title={title}
                  description={description}
                  handleClick={handleClick}
                  isDisable={false}
                  completed={false}
                />
              );
            })}
          </div>
          <div
            style={{
              width: "30vw",
              minHeight: "90vh",
              border: "2px solid grey",
            }}>
            <h1 style={{ textAlign: "center" }}>completed</h1>
            {completed.map(({ id, title, description }) => {
              return (
                <CardFile
                  key={id}
                  id={id}
                  title={title}
                  description={description}
                  handleClick={handleClick}
                  isDisable={false}
                  completed={true}
                />
              );
            })}
          </div>
        </div>
      </main>
    </>
  );
}
